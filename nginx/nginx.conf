user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off; # Hide Nginx version

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream for the backend service
    upstream backend_service {
        server backend:5000; # 'backend' is the service name in docker-compose, 5000 is its exposed port
    }

    server {
        listen 80;
        server_name localhost; # Replace with your domain if applicable

        # Location for backend API calls
        # All requests starting with /api/ will be forwarded to the backend service
        location /api/ {
            proxy_pass http://backend_service/; # Note the trailing slash
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_set_header X-NginX-Proxy true;
            proxy_redirect off;
            # WebSocket support (if your backend uses WebSockets)
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }

        # Location for serving frontend static assets
        # These files are in /usr/share/nginx/html (from frontend-build volume)
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html; # Important for single-page applications (SPA)
        }

        # Optional: Add specific caching rules for static assets
        location ~* \.(?:ico|css|js|gif|jpe?g|png|webp|svg|woff|woff2|eot|ttf|otf)$ {
            root /usr/share/nginx/html;
            expires 1y; # Cache these assets for a long time
            add_header Cache-Control "public";
            access_log off; # Don't log access to static files
        }

        # Optional: Deny access to hidden files
        location ~ /\. {
            deny all;
        }
    }
}
